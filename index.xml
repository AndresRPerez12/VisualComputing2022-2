<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Visual Computing 2022-2</title><link>https://andresrperez12.github.io/VisualComputing2022-2/</link><description>Recent content on Visual Computing 2022-2</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://andresrperez12.github.io/VisualComputing2022-2/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating a New Theme</title><link>https://andresrperez12.github.io/VisualComputing2022-2/posts/creating-a-new-theme/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://andresrperez12.github.io/VisualComputing2022-2/posts/creating-a-new-theme/</guid><description>Introduction # This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description></item><item><title>Migrate to Hugo from Jekyll</title><link>https://andresrperez12.github.io/VisualComputing2022-2/posts/migrate-from-jekyll/</link><pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate><guid>https://andresrperez12.github.io/VisualComputing2022-2/posts/migrate-from-jekyll/</guid><description>Move static content to static # Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description></item><item><title>(Hu)go Template Primer</title><link>https://andresrperez12.github.io/VisualComputing2022-2/posts/goisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://andresrperez12.github.io/VisualComputing2022-2/posts/goisforlovers/</guid><description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description></item><item><title>Getting Started with Hugo</title><link>https://andresrperez12.github.io/VisualComputing2022-2/posts/hugoisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://andresrperez12.github.io/VisualComputing2022-2/posts/hugoisforlovers/</guid><description>Step 1. Install Hugo # Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs # Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:</description></item><item><title/><link>https://andresrperez12.github.io/VisualComputing2022-2/docs/excercises/ColorMultiplicationExcercise/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andresrperez12.github.io/VisualComputing2022-2/docs/excercises/ColorMultiplicationExcercise/</guid><description>Excercise 2 # Excercise 1
Let rgb1 and rgb2 be two rgb colors. What would rgb1 * rgb2 mean? Problem statement # Color may be specified through the use of 3 channels, namely : Red, Green and Blue. Given this archetype for defining colors in a quantitative manner, what would color multiplication mean?
Background # The magnitude of each selected channel is, normaly, standardized as a number between 0 and 255.</description></item><item><title/><link>https://andresrperez12.github.io/VisualComputing2022-2/docs/excercises/dither/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andresrperez12.github.io/VisualComputing2022-2/docs/excercises/dither/</guid><description>Excercise: Dithering # Excercise
Research some dither visual apps. Background # The basic notion for dithering is adding noise in random patterns of pixels to improve the image quality while avoiding banding. In graphics, banding is the visible change from one color to the next instead of a smooth transition in a color gradient.
Dithering adds random patterns of pixels to a digital file. One of the earlier uses of dithering was in black and white newspapers.</description></item><item><title/><link>https://andresrperez12.github.io/VisualComputing2022-2/docs/excercises/SpatialCoherence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andresrperez12.github.io/VisualComputing2022-2/docs/excercises/SpatialCoherence/</guid><description>Excercise # Excercise
Research spatial coherence visual applications. Problem statement # Light spatial coherence is a fenommenon of electromagnetic waves in which the correlation of amplitude values at different the wavefront are evaluated in order to determine and classify the current state of the wave thats being propagated. Does this affect color visualization?
Background # Temporal Coherence is a measure of the correlation of light wave’s phase at different points along the direction of propagation – it tells us how monochromatic a source is.</description></item><item><title/><link>https://andresrperez12.github.io/VisualComputing2022-2/docs/excercises/TerrainVisualizationApplication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andresrperez12.github.io/VisualComputing2022-2/docs/excercises/TerrainVisualizationApplication/</guid><description>Excercise 2 # Excercise 2
Develop a terrain visualization application. Problem statement # Develop an application that allows visualizing terrain with Perlin noise
Background # Perling Noise: According to wikipedia, Perlin Noise is a mathematical function that uses interpolation between a large number of precalculated vector gradients that construct a value that varies pseudo-randomly in space or time. It resembles white noise, and is frequently used in computer-generated images to simulate variability in all kinds of phenomena, thus approaching a more natural appearance.</description></item><item><title/><link>https://andresrperez12.github.io/VisualComputing2022-2/docs/shortcodes/buttons/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andresrperez12.github.io/VisualComputing2022-2/docs/shortcodes/buttons/</guid><description> Buttons # Buttons are styled links that can lead to local page or external link.
Example # {{&amp;lt; button relref=&amp;#34;/&amp;#34; [class=&amp;#34;...&amp;#34;] &amp;gt;}}Get Home{{&amp;lt; /button &amp;gt;}} {{&amp;lt; button href=&amp;#34;https://github.com/alex-shpak/hugo-book&amp;#34; &amp;gt;}}Contribute{{&amp;lt; /button &amp;gt;}} Get Home Contribute</description></item><item><title/><link>https://andresrperez12.github.io/VisualComputing2022-2/docs/shortcodes/columns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andresrperez12.github.io/VisualComputing2022-2/docs/shortcodes/columns/</guid><description>Columns # Columns help organize shorter pieces of content horizontally for readability.
{{&amp;lt; columns &amp;gt;}} &amp;lt;!-- begin columns block --&amp;gt; # Left Content Lorem markdownum insigne... &amp;lt;---&amp;gt; &amp;lt;!-- magic separator, between columns --&amp;gt; # Mid Content Lorem markdownum insigne... &amp;lt;---&amp;gt; &amp;lt;!-- magic separator, between columns --&amp;gt; # Right Content Lorem markdownum insigne... {{&amp;lt; /columns &amp;gt;}} Example # Left Content # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter!</description></item><item><title/><link>https://andresrperez12.github.io/VisualComputing2022-2/docs/shortcodes/details/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andresrperez12.github.io/VisualComputing2022-2/docs/shortcodes/details/</guid><description> Details # Details shortcode is a helper for details html5 element. It is going to replace expand shortcode.
Example # {{&amp;lt; details &amp;#34;Title&amp;#34; [open] &amp;gt;}} ## Markdown content Lorem markdownum insigne... {{&amp;lt; /details &amp;gt;}} Title Markdown content # Lorem markdownum insigne&amp;hellip; Title Markdown content # Lorem markdownum insigne&amp;hellip;</description></item><item><title/><link>https://andresrperez12.github.io/VisualComputing2022-2/docs/shortcodes/hints/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andresrperez12.github.io/VisualComputing2022-2/docs/shortcodes/hints/</guid><description>Hints # Hint shortcode can be used as hint/alerts/notification block.
There are 3 colors to choose: info, warning and danger.
{{&amp;lt; hint [info|warning|danger] &amp;gt;}} **Markdown content** Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa {{&amp;lt; /hint &amp;gt;}} Example # Markdown content
Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa Markdown content</description></item><item><title/><link>https://andresrperez12.github.io/VisualComputing2022-2/docs/shortcodes/katex/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andresrperez12.github.io/VisualComputing2022-2/docs/shortcodes/katex/</guid><description>KaTeX # KaTeX shortcode let you render math typesetting in markdown document. See KaTeX
Example # {{&amp;lt; katex [display] [class=&amp;#34;text-center&amp;#34;] &amp;gt;}} f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi {{&amp;lt; /katex &amp;gt;}} \[f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi\] Display Mode Example # Here is some inline example: \(\pi(x)\) , rendered in the same line. And below is display example, having display: block \[f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi\] Text continues here.</description></item><item><title/><link>https://andresrperez12.github.io/VisualComputing2022-2/docs/shortcodes/mermaid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andresrperez12.github.io/VisualComputing2022-2/docs/shortcodes/mermaid/</guid><description>Mermaid Chart # MermaidJS is library for generating svg charts and diagrams from text.
Override Mermaid Initialization Config
To override the initialization config for Mermaid, create a mermaid.json file in your assets folder!
Example # {{&amp;lt; mermaid [class=&amp;#34;text-center&amp;#34;]&amp;gt;}} stateDiagram-v2 State1: The state with a note note right of State1 Important information! You can write notes. end note State1 --&amp;gt; State2 note left of State2 : This is the note to the left.</description></item><item><title/><link>https://andresrperez12.github.io/VisualComputing2022-2/docs/shortcodes/p5/div/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andresrperez12.github.io/VisualComputing2022-2/docs/shortcodes/p5/div/</guid><description>p5 div shortcodes embed p5.js code within a div element. There are two p5 div shortcodes: p5-div and p5-instance-div.
p5-div # {{&amp;lt; p5-div ver=&amp;#34;1.4.2&amp;#34; sketch=&amp;#34;/path/to/sketch.js&amp;#34; lib1=&amp;#34;https://cdntolib1/lib1.js&amp;#34; &amp;gt;}} All parameters are optional but sketch. Default values are shown in the above snippet but for libs*. Up to lib5 libs may be specified.
Scintillating grid # Look at this and also this among many more references there are.
p5-div markdown {{&amp;lt; p5-div sketch=&amp;#34;/showcase/sketches/scintillating.</description></item><item><title/><link>https://andresrperez12.github.io/VisualComputing2022-2/docs/shortcodes/p5/iframe/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andresrperez12.github.io/VisualComputing2022-2/docs/shortcodes/p5/iframe/</guid><description>p5 iframe shortcodes embed p5.js code within an iframe element. There are two p5 iframe shortcodes: p5-iframe and p5-global-iframe.
p5-iframe # {{&amp;lt; p5-iframe ver=&amp;#34;1.4.2&amp;#34; sketch=&amp;#34;/path/to/sketch.js&amp;#34; lib1=&amp;#34;https://cdntolib1/lib1.js&amp;#34; width=&amp;#34;800&amp;#34; height=&amp;#34;600&amp;#34; &amp;gt;}} All parameters are optional but sketch. Default values are shown in the above snippet but for libs*. Up to lib5 libs may be specified.
Color relativity # Look at this brief explanation about what color relativity is.
p5-iframe markdown {{&amp;lt; p5-iframe sketch=&amp;#34;/showcase/sketches/colors.</description></item><item><title/><link>https://andresrperez12.github.io/VisualComputing2022-2/docs/shortcodes/tabs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andresrperez12.github.io/VisualComputing2022-2/docs/shortcodes/tabs/</guid><description>Tabs # Tabs let you organize content by context, for example installation instructions for each supported platform.
{{&amp;lt; tabs &amp;#34;uniqueid&amp;#34; &amp;gt;}} {{&amp;lt; tab &amp;#34;MacOS&amp;#34; &amp;gt;}} # MacOS Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; tab &amp;#34;Linux&amp;#34; &amp;gt;}} # Linux Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; tab &amp;#34;Windows&amp;#34; &amp;gt;}} # Windows Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; /tabs &amp;gt;}} Example # MacOS MacOS # This is tab MacOS content.
Lorem markdownum insigne. Olympo signis Delphis!</description></item><item><title/><link>https://andresrperez12.github.io/VisualComputing2022-2/docs/workshops/3D_Application/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andresrperez12.github.io/VisualComputing2022-2/docs/workshops/3D_Application/</guid><description>Workshop: 3D WebGL app # Workshop
Implement a 3d webgl application. The p5.treegl or any other libraries may be used. Problem statement # Design and implement a 3D Application using WebGL, through some library or framwork based on it.
Background # WebGL # WebGL is an API for creating 3D graphics on web browsers without the need for any additional plug-ins, and is itself based on the OpenGL API. It uses the Canvas element from HTML to visualize the resulting graphics, and therefore is integrated with the DOM model.</description></item><item><title/><link>https://andresrperez12.github.io/VisualComputing2022-2/docs/workshops/maskingWorkshop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andresrperez12.github.io/VisualComputing2022-2/docs/workshops/maskingWorkshop/</guid><description>Workshop: Masking # Workshop 2
Implement an image processing web app supporting different image kernels. Problem statement # Implement an image processing web app supporting different image kernels and supporting:
Image histogram visualization. Different lightness (coloring brightness) tools. Background # Image Kernel # In image processing, a kernel, convolution matrix, or mask is a small matrix used for blurring, sharpening, embossing, edge detection, and more. This is accomplished by doing a convolution between the kernel and an image.</description></item><item><title/><link>https://andresrperez12.github.io/VisualComputing2022-2/docs/workshops/visualIllussionsWorkshop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andresrperez12.github.io/VisualComputing2022-2/docs/workshops/visualIllussionsWorkshop/</guid><description>Workshop: Visual Illusions # Workshop 1
Study, implement and discuss possible applications of some known visual phenomena and optical illusions. Problem statement # Identify, implement, and discuss possible applications of some known optical illussions on the design and development of computer graphics.
Background # Stroboscopic Artifacts # The color wheel displayed contains the three colors: red, green, and blue. When the angular speed of the rotation is turned up to 120° per frame, a strange effect can be seen.</description></item></channel></rss>